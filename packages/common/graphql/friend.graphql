enum FriendRequestStatus {
  PENDING
  REJECTED
  ACCEPTED
}

enum FriendRequestType {
  SENT
  RECV
}

union FriendRequestResult = ReceivedFriendRequest | SentFriendRequest

type Friend {
  _id: ID
  friendNodeX: User
  friendNodeY: User
}

type ReceivedFriendRequest {
  _id: ID
  requester: User
	recipient: ID
	status: FriendRequestStatus
}

type SentFriendRequest {
  _id: ID
  requester: ID
	recipient: User
	status: FriendRequestStatus
}

type Query {
  searchFriends(query: String): [Friend]
  getFriends: [Friend]
  getFriendRequests(type: FriendRequestType): [FriendRequestResult]
}

type Subscription {
	onFriendRequestSaved: [FriendRequestResult]
}

type Mutation {
  removeFriend(friendId: ID): ID
  createFriendRequest(recipientId: ID): ID
  updateFriendRequest(requestId: ID, status: FriendRequestStatus): ID
}
